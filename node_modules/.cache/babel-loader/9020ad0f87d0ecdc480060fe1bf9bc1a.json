{"remainingRequest":"/home/elvis/Rendu/C-DEV-121-COT-1-1-postit-elvis.akadjame/postit_final/node_modules/babel-loader/lib/index.js!/home/elvis/Rendu/C-DEV-121-COT-1-1-postit-elvis.akadjame/postit_final/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/elvis/Rendu/C-DEV-121-COT-1-1-postit-elvis.akadjame/postit_final/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/elvis/Rendu/C-DEV-121-COT-1-1-postit-elvis.akadjame/postit_final/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/elvis/Rendu/C-DEV-121-COT-1-1-postit-elvis.akadjame/postit_final/src/components/Note.vue?vue&type=template&id=34551322","dependencies":[{"path":"/home/elvis/Rendu/C-DEV-121-COT-1-1-postit-elvis.akadjame/postit_final/src/components/Note.vue","mtime":1679665354135},{"path":"/home/elvis/Rendu/C-DEV-121-COT-1-1-postit-elvis.akadjame/postit_final/babel.config.js","mtime":1668444740000},{"path":"/home/elvis/Rendu/C-DEV-121-COT-1-1-postit-elvis.akadjame/postit_final/node_modules/cache-loader/dist/cjs.js","mtime":1668444740000},{"path":"/home/elvis/Rendu/C-DEV-121-COT-1-1-postit-elvis.akadjame/postit_final/node_modules/babel-loader/lib/index.js","mtime":1668444740000},{"path":"/home/elvis/Rendu/C-DEV-121-COT-1-1-postit-elvis.akadjame/postit_final/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1668444740000},{"path":"/home/elvis/Rendu/C-DEV-121-COT-1-1-postit-elvis.akadjame/postit_final/node_modules/cache-loader/dist/cjs.js","mtime":1668444740000},{"path":"/home/elvis/Rendu/C-DEV-121-COT-1-1-postit-elvis.akadjame/postit_final/node_modules/vue-loader-v16/dist/index.js","mtime":1668444740000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIGNyZWF0ZVRleHRWTm9kZSBhcyBfY3JlYXRlVGV4dFZOb2RlLCByZXNvbHZlQ29tcG9uZW50IGFzIF9yZXNvbHZlQ29tcG9uZW50LCB3aXRoQ3R4IGFzIF93aXRoQ3R4LCBjcmVhdGVWTm9kZSBhcyBfY3JlYXRlVk5vZGUsIHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCByZW5kZXJMaXN0IGFzIF9yZW5kZXJMaXN0LCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVFbGVtZW50QmxvY2sgYXMgX2NyZWF0ZUVsZW1lbnRCbG9jaywgd2l0aE1vZGlmaWVycyBhcyBfd2l0aE1vZGlmaWVycyB9IGZyb20gInZ1ZSI7CmltcG9ydCBfaW1wb3J0c18wIGZyb20gJy4uL2Fzc2V0cy9mbGVjaGUtZ2F1Y2hlLnBuZyc7CmltcG9ydCBfaW1wb3J0c18xIGZyb20gJy4uL2Fzc2V0cy9wZW5jaWwucG5nJzsKaW1wb3J0IF9pbXBvcnRzXzIgZnJvbSAnLi4vYXNzZXRzL3RyYXNoLnBuZyc7CmNvbnN0IF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJtb25Qb3N0Igp9OwoKY29uc3QgX2hvaXN0ZWRfMiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJpbWciLCB7CiAgc3JjOiBfaW1wb3J0c18wLAogIGFsdDogIiIKfSwgbnVsbCwgLTEKLyogSE9JU1RFRCAqLwopOwoKY29uc3QgX2hvaXN0ZWRfMyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCJCQUNLIFRPIE1ZIFBPU1RJVCIpOwoKY29uc3QgX2hvaXN0ZWRfNCA9IHsKICBjbGFzczogInBvc3QxIgp9OwoKY29uc3QgX2hvaXN0ZWRfNSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJpbWciLCB7CiAgc3JjOiBfaW1wb3J0c18xCn0sIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCmNvbnN0IF9ob2lzdGVkXzYgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaW1nIiwgewogIHNyYzogX2ltcG9ydHNfMgp9LCBudWxsLCAtMQovKiBIT0lTVEVEICovCik7Cgpjb25zdCBfaG9pc3RlZF83ID0gW19ob2lzdGVkXzZdOwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHZhciBfJGRhdGEkcG9zdCwgXyRkYXRhJHBvc3QyOwoKICBjb25zdCBfY29tcG9uZW50X3JvdXRlcl9saW5rID0gX3Jlc29sdmVDb21wb25lbnQoInJvdXRlci1saW5rIik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9yb3V0ZXJfbGluaywgewogICAgc3R5bGU6IHsKICAgICAgInRleHQtZGVjb3JhdGlvbiI6ICJub25lIiwKICAgICAgImNvbG9yIjogImluaGVyaXQiLAogICAgICAibWFyZ2luLXRvcCI6ICI1dmgiCiAgICB9LAogICAgdG86ICIvIgogIH0sIHsKICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtfaG9pc3RlZF8yLCBfaG9pc3RlZF8zXSksCiAgICBfOiAxCiAgICAvKiBTVEFCTEUgKi8KCiAgfSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzQsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJoMiIsIG51bGwsIF90b0Rpc3BsYXlTdHJpbmcoKF8kZGF0YSRwb3N0ID0gJGRhdGEucG9zdCkgPT09IG51bGwgfHwgXyRkYXRhJHBvc3QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF8kZGF0YSRwb3N0LnRpdGxlKSwgMQogIC8qIFRFWFQgKi8KICApLCAoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUVsZW1lbnRCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KChfJGRhdGEkcG9zdDIgPSAkZGF0YS5wb3N0KSA9PT0gbnVsbCB8fCBfJGRhdGEkcG9zdDIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF8kZGF0YSRwb3N0Mi5jb250ZW50LCBjb250ZW50ID0+IHsKICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soInAiLCB7CiAgICAgIGtleTogY29udGVudAogICAgfSwgX3RvRGlzcGxheVN0cmluZyhjb250ZW50KSwgMQogICAgLyogVEVYVCAqLwogICAgKTsKICB9KSwgMTI4CiAgLyogS0VZRURfRlJBR01FTlQgKi8KICApKSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfcm91dGVyX2xpbmssIHsKICAgIHRvOiB7CiAgICAgIG5hbWU6ICdlZGl0Tm90ZScsCiAgICAgIHBhcmFtczogewogICAgICAgIGlkOiAkcHJvcHMuX2lkCiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbX2hvaXN0ZWRfNV0pLAogICAgXzogMQogICAgLyogU1RBQkxFICovCgogIH0sIDgKICAvKiBQUk9QUyAqLwogICwgWyJ0byJdKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnV0dG9uIiwgewogICAgY2xhc3M6ICJkZWxldGUiLAogICAgb25DbGljazogX2NhY2hlWzBdIHx8IChfY2FjaGVbMF0gPSBfd2l0aE1vZGlmaWVycygkZXZlbnQgPT4gJG9wdGlvbnMuZGVsZXRlUG9zdCgpLCBbInByZXZlbnQiXSkpCiAgfSwgX2hvaXN0ZWRfNyldKV0pOwp9"},{"version":3,"mappings":";OAIgBA,gBAAiC;OAM6BC,gBAA0B;OAClCC,gBAAyB;;EAVtFC,KAAK,EAAC;;;gCAE4EC,oBAClC,KADkC,EAClC;EAAzCC,GAAiC,EAAjCL,UAAyC;EAAPM,GAAG,EAAC;AAAG,CADkC;;AAAA;;iDAClC;;;EAC5CH,KAAK,EAAC;;;gCAKsDC,oBAAgC,KAAhC,EAAgC;EAA3BC,GAA0B,EAA1BJ;AAA2B,CAAhC,EAA+B,IAA/B,EAA+B;AAAA;AAA/B;;gCACRG,oBAA+B,KAA/B,EAA+B;EAA1BC,GAAyB,EAAzBH;AAA0B,CAA/B,EAA8B,IAA9B,EAA8B;AAAA;AAA9B;;oBAAAK;;;;;;uBAV7DC,oBAaM,KAbN,cAaM,CAXFC,aACgFC,sBADhF,EACgF;IADnEC,KAA8D,EAA9D;MAAA;MAAA;MAAA;IAAA,CACmE;IADJC,EAAE,EAAC;EACC,CADhF;sBAAmF,MAClC,CADkCC,UAClC;;;;GADjD,CAWE,EATFT,oBAOM,KAPN,cAOM,CANFA,oBAA0B,IAA1B,EAA0B,IAA1B,EAA0BU,gCAAnBC,UAAmB,gDAAnB,YAAMC,KAAa,CAA1B,EAAkB;EAAA;EAAlB,CAME,qBALFR,oBAEIS,SAFJ,EAEI,IAFJ,EAEIC,4BAFiBH,UAEjB,iDAFiB,aAAMI,OAEvB,EAFMA,OAAwB,IAAjB;yBAAjBX,oBAEI,GAFJ,EAEI;MAFiCY,GAAG,EAAED;IAEtC,CAFJ,EAAiDL,iBAC1CK,OAD0C,CAAjD,EACc;IAAA;IADd;GAEI,CAFJ;;EAAA,CAKE,GAFFV,aAA2GC,sBAA3G,EAA2G;IAA7FE,EAAE;MAAAS;MAAAC;QAAAC,IAAoCC;MAApC;IAAA;EAA2F,CAA3G;sBAA6D,MAAgC,CAAhCC,UAAgC;;;;GAA7F;;EAAA,SAEE,EADFrB,oBAA6F,QAA7F,EAA6F;IAArFD,KAAK,EAAC,QAA+E;IAArEuB,OAAK,qDAAUC,qBAAV,EAAoB,WAApB;EAAgE,CAA7F,aACE,CAPN,CASE,CAbN","names":["_imports_0","_imports_1","_imports_2","class","_createElementVNode","src","alt","_hoisted_6","_createElementBlock","_createVNode","_component_router_link","style","to","_hoisted_2","_toDisplayString","$data","title","_Fragment","_renderList","content","key","name","params","id","$props","_hoisted_5","onClick","$options"],"sourceRoot":"","sources":["/home/elvis/Rendu/C-DEV-121-COT-1-1-postit-elvis.akadjame/postit_final/src/components/Note.vue"],"sourcesContent":["<template>\n    <div class=\"monPost\">\n\n        <router-link style=\"text-decoration: none; color: inherit; margin-top: 5vh\" to=\"/\"><img\n                src=\"../assets/fleche-gauche.png\" alt=\"\">BACK TO MY POSTIT</router-link>\n        <div class=\"post1\">\n            <h2>{{ post?.title }}</h2>\n            <p v-for=\"content in post?.content\" :key=\"content\">\n                {{ content }}\n            </p>\n            <router-link :to=\"{ name: 'editNote', params: { id: _id } }\"><img src=\"../assets/pencil.png\"></router-link>\n            <button class=\"delete\" @click.prevent=\"deletePost()\"><img src=\"../assets/trash.png\"></button>\n        </div>\n\n    </div>\n</template>\n<style>\n.monPost {\n    margin: 0 auto;\n    display: flex;\n    justify-content: center;\n    height: 100vh;\n}\n\n.post1 {\n    padding: 1rem;\n    background-color: rgb(240, 230, 140);\n    box-shadow: 0px 10px 10px 10px grey;\n    height: 50vh;\n    margin-top: 25vh;\n    margin-right: 8%;\n    width: 40%;\n    display: flex;\n    flex-direction: column;\n    word-wrap: break-word;\n}\n\n.delete {\n    margin-top: 4vh;\n}\n</style>\n<script>\nimport axios from 'axios'\nexport default {\n    props: ['_id'],\n    data() {\n        return {\n            post: null,\n        }\n    },\n    mounted() {\n        const headers = { \"Content-Type\": \"application/json\" };\n        axios.get(\"https://post-it-7m1i.onrender.com/notes/\" + this.$route.params._id, { headers })\n            .then((reponse) => {\n                this.post = reponse.data;\n            });\n    },\n    methods: {\n        deletePost() {\n            const deleted = {\n                method: 'DELETE',\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            };\n            fetch(\"https://post-it-7m1i.onrender.com/notes/\" + this.$route.params._id, deleted)\n            this.$router.push('/');\n        }\n    }\n}\n</script>"]}]}